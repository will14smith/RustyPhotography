service: rusty-photography

plugins:
  - serverless-rust
  - serverless-terraform-outputs

custom:
  tfStage: ${self:provider.stage}

  lambdaRoleArn: ${terraform:${self:custom.tfStage}:lambda-role-arn.value}

  imageBucketId: ${terraform:${self:custom.tfStage}:image-bucket-id.value}
  siteBucketId: ${terraform:${self:custom.tfStage}:site-bucket-id.value}
  photographTableId: ${terraform:${self:custom.tfStage}:photograph-table-id.value}

  imageProcessorTopicArn: ${terraform:${self:custom.tfStage}:image-processor-topic-arn.value}
  imageProcessorTopicName: ${terraform:${self:custom.tfStage}:image-processor-topic-name.value}

  siteGeneratorAccessKeyParameter: ${terraform:${self:custom.tfStage}:site-generator-accesskey-parameter.value}
  siteGeneratorSecretKeyParameter: ${terraform:${self:custom.tfStage}:site-generator-secretkey-parameter.value}

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  region: eu-west-2
  runtime: rust

  environment:
    PHOTOGRAPH_TABLE: ${self:custom.photographTableId}
    IMAGE_BUCKET: ${self:custom.imageBucketId}
    SITE_BUCKET: ${self:custom.siteBucketId}

    IMAGE_PROCESSOR_TOPIC_ARN: ${self:custom.imageProcessorTopicArn}

    SSM_SiteGenerator_AccessKey: ${self:custom.siteGeneratorAccessKeyParameter}
    SSM_SiteGenerator_SecretKey: ${self:custom.siteGeneratorSecretKeyParameter}

  role: ${self:custom.lambdaRoleArn}

package:
  individually: true

layers:
  static:
    name: ${self:service}-${self:provider.stage}-static
    path: static

functions:
  web:
    handler: photography-lambda.web
    events:
      - http:
          path: /
          method: any
          cors: true
      - http:
          path: "{proxy+}"
          method: any
          cors: true

  site-gen:
    handler: photography-lambda.site_gen
    events:
      - http:
          path: /generate
          method: post
          cors: true
          integration: lambda
          response:
            statusCodes:
              204:
                pattern: ""
    layers:
      - Ref: StaticLambdaLayer

  image-processor:
    handler: photography-lambda.image_processor
    events:
      - sns:
          arn: ${self:custom.imageProcessorTopicArn}
          topicName: ${self:custom.imageProcessorTopicName}
