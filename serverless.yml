service: rusty-photography

plugins:
  - serverless-rust

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  region: eu-west-2
  runtime: rust

  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:Scan"
      Resource:
        Fn::Join:
          - ':'
          - - "arn:aws:dynamodb"
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - "table/photography-prod-photograph"

  environment:
    IMAGE_BUCKET: photography-dev-image
    PHOTOGRAPH_TABLE: photography-dev-photograph
    SITE_BUCKET: photography-dev-site
    SSM_SiteGenerator_AccessKey: photography-dev-SiteGeneratorSigningUser-AccessKey
    SSM_SiteGenerator_SecretKey: photography-dev-SiteGeneratorSigningUser-SecretKey

package:
  individually: true

layers:
  static:
    name: ${self:service}-${self:provider.stage}-static
    path: static

functions:
  web:
    handler: photography.web
    events:
      - http:
          path: /
          method: any
      - http:
          path: "{proxy+}"
          method: any

  site-gen:
    handler: photography.site_gen
    layers:
      - Ref: StaticLambdaLayer